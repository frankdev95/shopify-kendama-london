{{ 'component-kendama-featured-collection.css' | asset_url | stylesheet_tag }}

<section class="margin-vertical-lg">
    <featured-collection>
        <div class="overflow-scroll-wrap">
            <button class="btn arrow--left"></button>
            <button class="btn arrow--right"></button>
            <div class="overflow-scroller" data-product-image__scatter="{{ section.settings.image_scatter }}" data-type__product__capitalize="{{ section.settings.capitalize }}">
                <div class="grid">
                    {% assign featured_collection = collections[section.settings.featured_collection].products %}
                    {% if featured_collection[0] %}
                        {% for product in featured_collection %}
                            <div class="grid__item grid__product">
                                <div class="grid-product__content">
                                    <a class="grid-product__link" href="{{ product.url }}">
                                        <div class="product-slider">
                                            {% for image in product.images %}
                                                <div class="product-slide">
                                                    <img src="{{ image | img_url: 'large'}}" alt="">
                                                </div>
                                            {% endfor %}
                                        </div>
                                        <div class="grid-product__meta">
                                            <div class="grid-product__title">{{ product.title }}</div>
                                            <div class="grid-product__price">{{ product.price | money_with_currency }}</div>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        {% endfor %}
                    
                    {% else %}
                        {% for i in (1..8) %}
                            <div class="grid__item grid__product">
                                <div class="grid-product__content">
                                    <div class="product-slider">
                                        <div class="product-slide"></div>
                                        <div class="grid-product__meta">
                                            <div class="grid-product__title">Product</div>
                                            <div class="grid-product__price">Â£29.99</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% endif %}
                </div>
            </div>

        </div>
    </featured-collection>
</section>

{% schema %}
{
    "name": "Featured collection",
    "settings": [
        {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "Feature Collection"
        },
        {
            "type": "collection",
            "id": "featured_collection",
            "label": "Featured collection"
        },
        {
            "type": "checkbox",
            "id": "image_scatter",
            "label": "Scatter images",
            "default": false,
            "info": "Select this to give the collection a scattered effect"
        },
        {
            "type": "checkbox",
            "id": "capitalize",
            "label": "Capatlize product info",
            "default": true
        }
    ],
    "presets": [
        {
            "name": "Featured Collection"
        }
    ]
}
{% endschema %}

{% javascript %}
    class FeaturedCollection extends HTMLElement {
        constructor() {
            super();

        }

        connectedCallback() {
            this.scrollWrap = this.querySelector('.overflow-scroller');
            this.scrollWrap.scroll({
                left: 0,
                behavior: 'smooth'
            })
            this.arrowBtns = this.querySelectorAll('.btn');
            this.gridWidth = this.querySelector('.grid__item').getBoundingClientRect().width;
            this.amountToMove = 1;
            this.moveAmount = this.gridWidth * this.amountToMove;

            this.arrowBtns.forEach(btn => btn.addEventListener('click', this.moveScroll.bind(this)))
        }

        moveScroll(event) {
            let currentScroll = this.scrollWrap.scrollLeft;

            this.scrollWrap.scroll({
                left: event.target.classList.contains('arrow--right') ? currentScroll += this.moveAmount : currentScroll -= this.moveAmount,
                behavior: 'smooth'
            })
        }

    }

    customElements.define('featured-collection', FeaturedCollection)
{% endjavascript %}